#include <stdio.h>
#include <string.h>

#define MAX_CHAR 255
#define CMD_SIZE 4
#define ADD "ADD"
#define SUB "SUB"

// polynom structure
typedef struct Polynom
{
  int x2;
  int x1;
  int c;
} Polynom;

// function that parse polynom and retrieves its coefficients
void parsePolynom(Polynom *p, char *line);

// main function
int main(int argc, char **argv)
{
  FILE *fptr;
  char line[MAX_CHAR] = {'\0'};
  char command[CMD_SIZE] = {'\0'};
  char polynom1[MAX_CHAR] = {'\0'};
  char polynom2[MAX_CHAR] = {'\0'};
  Polynom p1;
  Polynom p2;

  // open file
  if(NULL == (fptr = fopen(argv[1], "r"))) {
    fprintf(stderr, "FILE NOT OPENED");
    return -1;
  }

  if(NULL == fgets(line, MAX_CHAR, fptr)) {
    fprintf(stderr, "fgets error");
    return -1;
  }

  strcpy(command, strtok(line, " "));
  strcpy(polynom1, strtok(NULL, " "));
  strcpy(polynom2, strtok(NULL, " "));

  printf("Command: %s\n", command);
  printf("Polynom1: %s\n", polynom1);
  printf("Polynom2: %s\n", polynom2);


  if(!strcmp(ADD, command)) {

  }
  else if(!strcmp(SUB, command)) {

  }
  else {
    fprintf(stderr, "invalid command\n");
  }

  // close file
  fclose(fptr);

  return 0;
}

void par
sePolynom(Polynom *p, char *line)
{
  if(NULL == line) {
    fprintf(stderr, "invalid data\n");
    return;
  }
 
  while()
 
}
