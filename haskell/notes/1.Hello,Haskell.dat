1. The terms argument and parameter are often used interchangeably. However, it is worthwhile to
   understand the distinction. A parameter, or formal parameter, represents a value that will be
   passed to the function when the function is called. Thus, parameters are usually variables.
   An argument is an input value the function is applied to.

   f x = x + 2  -- x is parameter. In f 3 call, 3 is argument.

2. An expression is a combination of symbols that conforms to syntactic rues and can be evaluated
   to some result. In Haskell, an expression is a well-structured combination of constants,
   variables, and functions.

3. A value is an expression that cannot be reduced or evaluated any further. 2 * 2 is an
   expression, but not a value, whereas what it evaluates to, 4 is a value.

4. A function is a mathematical object whose capabilities are limited to being applied to an
   argument and returning a result.

5. Infix notation is the style used in arithmetic and logic. Infix means that the operator is
   placed between the operands or arguments.

6. Operators are functions that are infix by default. In Haskell, operators must use symbols
   and not alphanumeric characters.

7. Syntactic sugar is syntax within a programming language designed to make expressions easier
   to write or read.